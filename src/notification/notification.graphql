type Notification {
  id: ID!
  created_at: Date!
  updated_at: Date
  data: String!
  type: NotificationType!
  status: NotificationStatus
  recipient: User!
}

enum NotificationType {
  COURSE_ADDITION
  TEACHER_COURSE_ASSIGNMENT
  COURSE_CLASS_ADDITION
}

input CreateNotificationInput {
  data: String!
  type: NotificationType!
  recipientId: ID!
}

input UpdateNotificationInput {
  id: ID!
  text: String
  status: NotificationStatus
}

enum NotificationStatus {
  UNREAD
  READ
  ARCHIVED
}

type Query {
  notifications: [Notification]!
  notification(id: ID!): Notification
}

type Mutation {
  createNotification(
    createNotificationInput: CreateNotificationInput!
  ): Notification!
  updateNotification(
    updateNotificationInput: UpdateNotificationInput!
  ): Notification!
  removeNotification(id: ID!): Notification
}

type Subscription {
  onSubscribe(recipientId: ID!): [Notification]!
}
