type AssignmentDefinition {
  id: ID!
  created_at: Date!
  updated_at: Date
  name: String!
  submissionDeadline: Date!
  maximumScore: Float!
  isCriteriaBased: Boolean
  instructionsFile: String!
  submissions: [AssignmentSubmission]
  course: Course!
  criteria: [AssignmentCriterion]
}

input CreateAssignmentDefinitionInput {
  submissionDeadline: Date!
  maximumScore: Float!
  isCriteriaBased: Boolean = false
  instructionsFile: Upload!
  courseId: ID!
  name: String!
}

input UpdateAssignmentDefinitionInput {
  id: ID!
  submissionDeadline: Date
  maximumScore: Float
  isCriteriaBased: Boolean = false
  instructionsFileId: ID
  name: String
}

type AssignmentCriterion {
  id: ID!
  created_at: Date!
  updated_at: Date
  title: String!
  weight: Int!
  definition: AssignmentDefinition!
  values: [CriterionValue]
}

input CreateAssignmentCriterionInput {
  title: String!
  weight: Int!
  definitionId: ID!
}

input UpdateAssignmentCriterionInput {
  id: ID!
  title: String
  weight: Int
}

type CriterionValue {
  id: ID!
  created_at: Date!
  updated_at: Date
  score: Float!
  criterion: AssignmentCriterion
  submission: AssignmentSubmission
}

input CreateCriterionValueInput {
  score: Float!
  criterionId: ID!
  submissionId: ID!
}

input UpdateCriterionValueInput {
  id: ID!
  score: Float!
}

type AssignmentSubmission {
  id: ID!
  created_at: Date!
  updated_at: Date
  submissionDate: Date!
  totalScore: Float
  submissionFile: String!
  definition: AssignmentDefinition!
  submittedBy: User!
  values: [CriterionValue]
}

type AssignmentSubmissionDocument {
  id: ID!
  created_at: Date!
  updated_at: Date
  documentType: String!
  documentDisplayName: String!
  storedFileName: String!
  assignmentSubmission: AssignmentSubmission
}

input CreateAssignmentSubmissionInput {
  submissionDate: Date!
  file: Upload!
  definitionId: ID!
  studentId: ID!
}

type Query {
  assignmentDefinitions(courseId: ID!): [AssignmentDefinition]!
  assignmentDefinition(id: ID!): AssignmentDefinition
  assignmentSubmissions(assignmentDefinitionId: ID!): [AssignmentSubmission]!
  assignmentSubmission(id: ID!): AssignmentSubmission
  assignmentCriteria(assignmentDefinitionId: ID!): [AssignmentCriterion]!
  assignmentCriterion(id: ID!): AssignmentCriterion
  criterionValues(criterionId: ID!): [CriterionValue]!
  criterionValue(id: ID!): CriterionValue
}

type Mutation {
  createAssignmentDefinition(
    createAssignmentDefinitionInput: CreateAssignmentDefinitionInput!
  ): AssignmentDefinition!
  updateAssignmentDefinition(
    updateAssignmentDefinitionInput: UpdateAssignmentDefinitionInput!
  ): AssignmentDefinition!
  removeAssignmentDefinition(id: ID!): Boolean

  createAssignmentSubmission(
    createAssignmentSubmissionInput: CreateAssignmentSubmissionInput!
  ): AssignmentSubmission!
  removeAssignmentSubmission(id: ID!): Boolean!

  createAssignmentCriterion(
    createAssignmentCriterionInput: CreateAssignmentCriterionInput!
  ): AssignmentCriterion!
  updateAssignmentCriterion(
    updateAssignmentCriterionInput: UpdateAssignmentCriterionInput!
  ): AssignmentCriterion!
  removeAssignmentCriterion(id: ID!): Boolean!

  createCriterionValue(
    createCriterionValueInput: CreateCriterionValueInput
  ): CriterionValue!
  updateCriterionValue(
    updateCriterionValueInput: UpdateCriterionValueInput
  ): CriterionValue!
  removeCriterionValue(id: ID!): Boolean!

  gradeSubmission(id: ID!, totalScore: Float): AssignmentSubmission!
  gradeNormalSubmission(id: ID!, totalScore: Float): AssignmentSubmission! 
}
